{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ApplicationName": {
            "defaultValue": "OpenAILogicApp",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('ApplicationName')]",
            "location": "eastus2",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "prompt": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "AzureOpenAIResponse": {
                                    "runAfter": {
                                        "ParseAzureOpenAI": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "response": "@trim(body('ParseAzureOpenAI')?['choices'][0]['text'])",
                                            "source": "Azure OpenAI"
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "AzureOpenAIRest": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "prompt": "Classify the sentiment in the text and respond with the value Positive, Neutral or Negative. ---@{triggerBody()?['prompt']}"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "api-key": "@variables('AzureOpenAIKey')"
                                        },
                                        "method": "POST",
                                        "uri": "https://@{variables('AzureOpenAIURL')}/openai/deployments/@{variables('AzureOpenAIDeployment')}/completions?api-version=2023-03-15-preview"
                                    }
                                },
                                "ParseAzureOpenAI": {
                                    "runAfter": {
                                        "AzureOpenAIRest": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('AzureOpenAIRest')",
                                        "schema": {
                                            "properties": {
                                                "choices": {
                                                    "items": {
                                                        "properties": {
                                                            "finish_reason": {
                                                                "type": "string"
                                                            },
                                                            "index": {
                                                                "type": "integer"
                                                            },
                                                            "logprobs": {},
                                                            "text": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "text",
                                                            "index",
                                                            "finish_reason",
                                                            "logprobs"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "created": {
                                                    "type": "integer"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "model": {
                                                    "type": "string"
                                                },
                                                "object": {
                                                    "type": "string"
                                                },
                                                "usage": {
                                                    "properties": {
                                                        "completion_tokens": {
                                                            "type": "integer"
                                                        },
                                                        "prompt_tokens": {
                                                            "type": "integer"
                                                        },
                                                        "total_tokens": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_OpenAIKey": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "OpenAIResponse": {
                                        "runAfter": {
                                            "ParseOpenAI": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": {
                                                "response": "@trim(body('ParseOpenAI')?['choices'][0]['text'])",
                                                "source": "OpenAI"
                                            },
                                            "statusCode": 200
                                        }
                                    },
                                    "OpenAIRest": {
                                        "runAfter": {},
                                        "type": "Http",
                                        "inputs": {
                                            "body": {
                                                "frequency_penalty": 0,
                                                "max_tokens": 60,
                                                "model": "text-davinci-003",
                                                "presence_penalty": 0,
                                                "prompt": "Classify the sentiment in the text and respond with the value Positive, Neutral or Negative. ---@{triggerBody()?['prompt']}",
                                                "temperature": 0,
                                                "top_p": 1
                                            },
                                            "headers": {
                                                "Authorization": "Bearer @{variables('OpenAIKey')}",
                                                "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "https://api.openai.com/v1/completions"
                                        }
                                    },
                                    "ParseOpenAI": {
                                        "runAfter": {
                                            "OpenAIRest": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ParseJson",
                                        "inputs": {
                                            "content": "@body('OpenAIRest')",
                                            "schema": {
                                                "properties": {
                                                    "choices": {
                                                        "items": {
                                                            "properties": {
                                                                "finish_reason": {
                                                                    "type": "string"
                                                                },
                                                                "index": {
                                                                    "type": "integer"
                                                                },
                                                                "logprobs": {},
                                                                "text": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "text",
                                                                "index",
                                                                "logprobs",
                                                                "finish_reason"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "created": {
                                                        "type": "integer"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "model": {
                                                        "type": "string"
                                                    },
                                                    "object": {
                                                        "type": "string"
                                                    },
                                                    "usage": {
                                                        "properties": {
                                                            "completion_tokens": {
                                                                "type": "integer"
                                                            },
                                                            "prompt_tokens": {
                                                                "type": "integer"
                                                            },
                                                            "total_tokens": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@toLower(triggerBody()?['type'])",
                                            "azure"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_AzureOpenAIDeployment": {
                            "runAfter": {
                                "Initialize_AzureOpenAIKey": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AzureOpenAIDeployment",
                                        "type": "string",
                                        "value": "Azure OpenAI Studio deployment name"
                                    }
                                ]
                            }
                        },
                        "Initialize_AzureOpenAIKey": {
                            "runAfter": {
                                "Initialize_AzureOpenAIURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AzureOpenAIKey",
                                        "type": "string",
                                        "value": "API Key found in Azure OpenAI Portal"
                                    }
                                ]
                            }
                        },
                        "Initialize_AzureOpenAIURL": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AzureOpenAIURL",
                                        "type": "string",
                                        "value": "YourAzureOpenAIEndpoint.openai.azure.com"
                                    }
                                ]
                            }
                        },
                        "Initialize_OpenAIKey": {
                            "runAfter": {
                                "Initialize_AzureOpenAIDeployment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OpenAIKey",
                                        "type": "string",
                                        "value": "Your-OpenAI-API-Key"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ]
}
